// game-storage.js

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∏–≥—Ä–æ–∫–∞
function initPlayerName() {
    const username = localStorage.getItem("tetris.username");
    const playerNameElement = document.querySelector('.player-name');

    if (username && username.trim() !== '') {
        playerNameElement.textContent = username;
    } else {
        playerNameElement.textContent = "–ò–≥—Ä–æ–∫";
    }

    console.log("–¢–µ–∫—É—â–∏–π –∏–≥—Ä–æ–∫:", playerNameElement.textContent);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏–≥—Ä—ã
function saveGameResult(score, level, linesCleared) {
    const username = localStorage.getItem("tetris.username") || "–ò–≥—Ä–æ–∫";
    const gameResult = {
        username: username,
        score: score,
        level: level,
        lines: linesCleared,
        date: new Date().toLocaleString()
    };

    // –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    const existingResults = JSON.parse(localStorage.getItem("tetris.results") || "[]");

    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    existingResults.push(gameResult);

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –æ—á–∫–∞–º (–ø–æ —É–±—ã–≤–∞–Ω–∏—é) –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ø-10
    existingResults.sort((a, b) => b.score - a.score);
    const topResults = existingResults.slice(0, 10);

    localStorage.setItem("tetris.results", JSON.stringify(topResults));

    console.log("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω:", gameResult);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤
    showLeaderboardInConsole();

    return gameResult;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤ –≤ –∫–æ–Ω—Å–æ–ª—å
function showLeaderboardInConsole() {
    const leaderboard = JSON.parse(localStorage.getItem("tetris.results") || "[]");
    const currentUser = localStorage.getItem("tetris.username") || "–ò–≥—Ä–æ–∫";

    console.log("üèÜ –¢–ê–ë–õ–ò–¶–ê –õ–ò–î–ï–†–û–í –¢–ï–¢–†–ò–° üèÜ");
    console.log("================================");

    if (leaderboard.length === 0) {
        console.log("   –ü–æ–∫–∞ –Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤");
        return;
    }

    leaderboard.forEach((result, index) => {
        const rank = index + 1;
        const isCurrentUser = result.username === currentUser;
        const userMarker = isCurrentUser ? " üëà –í–´" : "";

        console.log(
            `${rank.toString().padStart(2, ' ')}. ${result.username.padEnd(12)} - ${result.score.toString().padStart(6, ' ')} –æ—á–∫–æ–≤ (—É—Ä. ${result.level}, –ª–∏–Ω–∏–∏: ${result.lines})${userMarker}`
        );
    });

    console.log("================================");

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞
    const userResults = leaderboard.filter(result => result.username === currentUser);
    if (userResults.length > 0) {
        const bestScore = Math.max(...userResults.map(r => r.score));
        console.log(`üéØ –í–∞—à –ª—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${bestScore} –æ—á–∫–æ–≤`);
        console.log(`üìä –í—Å–µ–≥–æ –≤–∞—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: ${userResults.length}`);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
function showGameOverModal(score, level, lines) {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const currentResult = saveGameResult(score, level, lines);

    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    createModalIfNotExists();

    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
    document.getElementById('current-score').textContent = score;
    document.getElementById('current-level').textContent = level;
    document.getElementById('current-lines').textContent = lines;

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤
    displayLeaderboardInModal(currentResult.username);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    document.getElementById('game-over-modal').style.display = 'flex';
}

// –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function createModalIfNotExists() {
    if (document.getElementById('game-over-modal')) {
        return;
    }

    const modalHTML = `
        <div id="game-over-modal" class="game-over-modal" style="display: none;">
            <div class="modal-content">
                <h2>üéÆ –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!</h2>
                
                <div class="current-result">
                    <h3>–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</h3>
                    <p>–°—á–µ—Ç: <span id="current-score">0</span></p>
                    <p>–£—Ä–æ–≤–µ–Ω—å: <span id="current-level">0</span></p>
                    <p>–õ–∏–Ω–∏–∏: <span id="current-lines">0</span></p>
                </div>
                
                <div class="leaderboard-section">
                    <h3>üèÜ –¢–æ–ø-10 –∏–≥—Ä–æ–∫–æ–≤</h3>
                    <div id="leaderboard-list" class="leaderboard-list">
                        <!-- –°—é–¥–∞ –≤—Å—Ç–∞–≤–∏—Ç—Å—è —Ç–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤ -->
                    </div>
                </div>
                
                <div class="modal-buttons">
                    <button id="restart-game-btn" class="restart-btn">üéØ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ</button>
                </div>
            </div>
        </div>
    `;

    document.body.insertAdjacentHTML('beforeend', modalHTML);

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏
    document.getElementById('restart-game-btn').addEventListener('click', function() {
        hideGameOverModal();
        // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–≥—Ä—ã
        if (window.restartGame) {
            window.restartGame();
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function hideGameOverModal() {
    const modal = document.getElementById('game-over-modal');
    if (modal) {
        modal.style.display = 'none';
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
function displayLeaderboardInModal(currentUsername) {
    const leaderboard = JSON.parse(localStorage.getItem("tetris.results") || "[]");
    const leaderboardList = document.getElementById('leaderboard-list');

    if (leaderboard.length === 0) {
        leaderboardList.innerHTML = '<p class="no-results">–ü–æ–∫–∞ –Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</p>';
        return;
    }

    leaderboardList.innerHTML = leaderboard.map((result, index) => {
        const isCurrentUser = result.username === currentUsername;
        const medal = index === 0 ? 'ü•á' : index === 1 ? 'ü•à' : index === 2 ? 'ü•â' : `${index + 1}.`;

        return `
            <div class="leaderboard-item ${isCurrentUser ? 'current-user' : ''}">
                <span class="rank">${medal}</span>
                <span class="name">${result.username}</span>
                <span class="score">${result.score}</span>
                <span class="details">—É—Ä.${result.level}</span>
            </div>
        `;
    }).join('');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤
function getLeaderboard() {
    return JSON.parse(localStorage.getItem("tetris.results") || "[]");
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
function clearAllResults() {
    localStorage.removeItem("tetris.results");
    console.log("üóëÔ∏è –í—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—á–∏—â–µ–Ω—ã");
    showLeaderboardInConsole();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    initPlayerName();
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞—Ä–∞–Ω–µ–µ
    createModalIfNotExists();
});

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ index.js
window.saveGameResult = saveGameResult;
window.showGameOverModal = showGameOverModal;
window.hideGameOverModal = hideGameOverModal;
window.showLeaderboardInConsole = showLeaderboardInConsole;
window.getLeaderboard = getLeaderboard;
window.clearAllResults = clearAllResults;